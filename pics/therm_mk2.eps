%!PS-Adobe-2.0 EPSF-2.0
%%Title: therm_mk2.pstex
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Mon Jun 14 14:47:05 1999
%%For: kate@gjoa.rutgers.edu (Kate Hedstrom)
%%Orientation: Portrait
%%BoundingBox: 0 0 396 157
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-88.0 354.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 6896 m -1000 -1000 l 9058 -1000 l 9058 6896 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1500 4500 m 5475 4500 l gs col0 s gr 
% Polyline
30.000 slw
n 1500 3750 m 5475 3750 l gs col0 s gr 
% Polyline
7.500 slw
n 6975 4500 m 8025 4500 l gs col0 s gr 
% Polyline
n 6975 4050 m 8025 4050 l gs col0 s gr 
% Polyline
n 1500 4050 m 5475 4050 l gs col0 s gr 
% Polyline
0.000 slw
n 6975 4050 m 8025 4050 l 8025 3750 l 6975 3750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 465.00 250.00] PATmp PATsp ef gr PATusp 
% Polyline
n 6300 4575 m 6300 4050 l gs col7 1.00 shd ef gr 
% Polyline
7.500 slw
gs  clippath
3270 5094 m 3300 4950 l 3330 5094 l 3330 4935 l 3270 4935 l cp
clip
n 3300 5475 m 3300 4950 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 3270 5094 m 3300 4950 l 3330 5094 l 3300 5070 l 3270 5094 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6270 4194 m 6300 4050 l 6330 4194 l 6330 4035 l 6270 4035 l cp
clip
n 6300 4725 m 6300 4050 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 6270 4194 m 6300 4050 l 6330 4194 l 6300 4170 l 6270 4194 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6270 3594 m 6300 3450 l 6330 3594 l 6330 3435 l 6270 3435 l cp
clip
n 6300 4050 m 6300 3450 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 6270 3594 m 6300 3450 l 6330 3594 l 6300 3570 l 6270 3594 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2130 4806 m 2100 4950 l 2070 4806 l 2070 4965 l 2130 4965 l cp
clip
n 2100 4650 m 2100 4950 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 2130 4806 m 2100 4950 l 2070 4806 l 2100 4830 l 2130 4806 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2070 4194 m 2100 4050 l 2130 4194 l 2130 4035 l 2070 4035 l cp
clip
n 2100 4350 m 2100 4050 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 2070 4194 m 2100 4050 l 2130 4194 l 2100 4170 l 2070 4194 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2130 3606 m 2100 3750 l 2070 3606 l 2070 3765 l 2130 3765 l cp
clip
n 2100 3375 m 2100 3750 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 2130 3606 m 2100 3750 l 2070 3606 l 2100 3630 l 2130 3606 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3270 4719 m 3300 4575 l 3330 4719 l 3330 4560 l 3270 4560 l cp
clip
n 3300 4950 m 3300 4575 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 3270 4719 m 3300 4575 l 3330 4719 l 3300 4695 l 3270 4719 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3270 4194 m 3300 4050 l 3330 4194 l 3330 4035 l 3270 4035 l cp
clip
n 3300 4350 m 3300 4050 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 3270 4194 m 3300 4050 l 3330 4194 l 3300 4170 l 3270 4194 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3270 3894 m 3300 3750 l 3330 3894 l 3330 3735 l 3270 3735 l cp
clip
n 3300 4050 m 3300 3750 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 3270 3894 m 3300 3750 l 3330 3894 l 3300 3870 l 3270 3894 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3270 3444 m 3300 3300 l 3330 3444 l 3330 3285 l 3270 3285 l cp
clip
n 3300 3750 m 3300 3300 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 3270 3444 m 3300 3300 l 3330 3444 l 3300 3420 l 3270 3444 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
30.000 slw
n 1500 4950 m 5475 4950 l gs col0 s gr 
% Polyline
7.500 slw
n 1500 4050 m 5475 4050 l 5475 3750 l 1500 3750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 100.00 250.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
3270 3894 m 3300 3750 l 3330 3894 l 3330 3735 l 3270 3735 l cp
clip
n 3300 4050 m 3300 3750 l gs col7 1.00 shd ef gr gs col0 s gr gr

% arrowhead
n 3270 3894 m 3300 3750 l 3330 3894 l 3300 3870 l 3270 3894 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
0.000 slw
n 1958 4350 m 2250 4350 l 2250 4578 l 1958 4578 l cp gs col7 1.00 shd ef gr 
% Polyline
n 1975 3825 m 2252 3825 l 2252 3989 l 1975 3989 l cp gs col7 1.00 shd ef gr 
% Polyline
n 4755 3604 m 4999 3604 l 4999 3870 l 4755 3870 l cp gs col7 1.00 shd ef gr 
% Polyline
n 3350 3808 m 3661 3808 l 3661 3995 l 3350 3995 l cp gs col7 1.00 shd ef gr 
% Polyline
n 4755 3944 m 4999 3944 l 4999 4210 l 4755 4210 l cp gs col7 1.00 shd ef gr 
% Polyline
n 4755 4340 m 4993 4340 l 4993 5100 l 4755 5100 l cp gs col7 1.00 shd ef gr 
% Polyline
7.500 slw
n 6020 4005 m 6021 4006 l 6023 4012 l 6029 4022 l 6035 4034 l 6042 4043 l
 6050 4050 l 6057 4055 l 6066 4059 l 6076 4064 l 6086 4069 l
 6097 4073 l 6107 4077 l 6116 4079 l 6125 4080 l 6133 4079 l
 6141 4076 l 6150 4073 l 6158 4068 l 6166 4063 l 6173 4058 l
 6180 4054 l 6185 4050 l 6191 4044 l 6195 4035 l 6198 4027 l
 6200 4021 l 6200 4020 l gs col0 s gr 
% Polyline
n 6198 4005 m 6199 4006 l 6201 4012 l 6207 4022 l 6213 4034 l 6220 4043 l
 6228 4050 l 6235 4055 l 6244 4059 l 6254 4064 l 6264 4069 l
 6275 4073 l 6285 4077 l 6294 4079 l 6303 4080 l 6311 4079 l
 6319 4076 l 6328 4073 l 6336 4068 l 6344 4063 l 6351 4058 l
 6358 4054 l 6363 4050 l 6369 4044 l 6373 4035 l 6376 4027 l
 6378 4021 l 6378 4020 l gs col0 s gr 
% Polyline
n 6377 4005 m 6378 4006 l 6380 4012 l 6386 4022 l 6392 4034 l 6399 4043 l
 6407 4050 l 6414 4055 l 6423 4059 l 6433 4064 l 6443 4069 l
 6454 4073 l 6464 4077 l 6473 4079 l 6482 4080 l 6490 4079 l
 6498 4076 l 6507 4073 l 6515 4068 l 6523 4063 l 6530 4058 l
 6537 4054 l 6542 4050 l 6548 4044 l 6552 4035 l 6555 4027 l
 6557 4021 l 6557 4020 l gs col0 s gr 
% Polyline
n 6559 4005 m 6560 4006 l 6562 4012 l 6568 4022 l 6574 4034 l 6581 4043 l
 6589 4050 l 6596 4055 l 6605 4059 l 6615 4064 l 6625 4069 l
 6636 4073 l 6646 4077 l 6655 4079 l 6664 4080 l 6672 4079 l
 6680 4076 l 6689 4073 l 6697 4068 l 6705 4063 l 6712 4058 l
 6719 4054 l 6724 4050 l 6730 4044 l 6734 4035 l 6737 4027 l
 6739 4021 l 6739 4020 l gs col0 s gr 
% Polyline
n 6734 4005 m 6735 4006 l 6737 4012 l 6743 4022 l 6749 4034 l 6756 4043 l
 6764 4050 l 6771 4055 l 6780 4059 l 6790 4064 l 6800 4069 l
 6811 4073 l 6821 4077 l 6830 4079 l 6839 4080 l 6847 4079 l
 6855 4076 l 6864 4073 l 6872 4068 l 6880 4063 l 6887 4058 l
 6894 4054 l 6899 4050 l 6905 4044 l 6909 4035 l 6912 4027 l
 6914 4021 l 6914 4020 l gs col0 s gr 
% Polyline
n 6913 4005 m 6914 4006 l 6917 4012 l 6924 4023 l 6931 4034 l 6938 4044 l
 6943 4050 l 6948 4055 l 6955 4059 l 6962 4064 l 6969 4068 l
 6972 4070 l 6973 4070 l gs col0 s gr 
% Polyline
n 5836 4005 m 5837 4006 l 5839 4012 l 5845 4022 l 5851 4034 l 5858 4043 l
 5866 4050 l 5873 4055 l 5882 4059 l 5892 4064 l 5902 4069 l
 5913 4073 l 5923 4077 l 5932 4079 l 5941 4080 l 5949 4079 l
 5957 4076 l 5966 4073 l 5974 4068 l 5982 4063 l 5989 4058 l
 5996 4054 l 6001 4050 l 6007 4044 l 6011 4035 l 6014 4027 l
 6016 4021 l 6016 4020 l gs col0 s gr 
% Polyline
n 5475 3750 m 5475 4950 l gs col0 s gr 
% Polyline
n 6975 3750 m 6975 4950 l gs col0 s gr 
% Polyline
n 5655 4005 m 5656 4006 l 5658 4012 l 5664 4022 l 5670 4034 l 5677 4043 l
 5685 4050 l 5692 4055 l 5701 4059 l 5711 4064 l 5721 4069 l
 5732 4073 l 5742 4077 l 5751 4079 l 5760 4080 l 5768 4079 l
 5776 4076 l 5785 4073 l 5793 4068 l 5801 4063 l 5808 4058 l
 5815 4054 l 5820 4050 l 5826 4044 l 5830 4035 l 5833 4027 l
 5835 4021 l 5835 4020 l gs col0 s gr 
% Polyline
30.000 slw
n 6975 3750 m 8025 3750 l gs col0 s gr 
% Polyline
n 6975 4950 m 8025 4950 l gs col0 s gr 
% Polyline
7.500 slw
n 5475 4005 m 5476 4006 l 5478 4012 l 5484 4022 l 5490 4034 l 5497 4043 l
 5505 4050 l 5512 4055 l 5521 4059 l 5531 4064 l 5541 4069 l
 5552 4073 l 5562 4077 l 5571 4079 l 5580 4080 l 5588 4079 l
 5596 4076 l 5605 4073 l 5613 4068 l 5621 4063 l 5628 4058 l
 5635 4054 l 5640 4050 l 5646 4044 l 5650 4035 l 5653 4027 l
 5655 4021 l 5655 4020 l gs col0 s gr 
% Polyline
0.000 slw
n 1500 3390 m 8025 3390 l 8025 5895 l 1500 5895 l cp 
% Polyline
7.500 slw
n 1500 3750 m 1500 4950 l gs col0 s gr 
$F2psEnd
rs
end
